from flask_restful import Resource, fields, marshal_with, reqparse
from flask_jwt_extended import jwt_required, current_user
from models import Product, db

user_fields={
    "id":fields.Integer,
    "name":fields.String,
    "description":fields.String,
    "image":fields.String,
    "price":fields.Integer
}

response_field = {
    "message": fields.String,
    "status": fields.String,
    "user": fields.Nested(user_fields)
}
class Products(Resource):
        parser = reqparse.RequestParser()
        parser.add_argument('name', required=True, help="username is required")
        parser.add_argument('description', required=True, help="Phone number is required")
        
        def get(self):
            products = Product.query.all()
            return products
        

        @marshal_with(response_field)
        @jwt_required
        def post(self):
            data = Products.parser.parse_args()
            product = Product(**data)

            try:
                db.session.add(product)
                db.session.commit()
                return {"message": "Product created success"}
            except:
                return {"message": "Unable to create Product "}
            

        def delete(self,id):
            product = Product.query.get(id)
            if product:                 
                db.session.delete(product)
                db.session.commit()
                return {"message": "product deleted successfully "}
            else:
                 return {"message": "product not found "}
                 
                 


      
